// Code generated by go-bindata. (@generated) DO NOT EDIT.

// Package templates generated by go-bindata.// sources:
// ../../templates/login.html
// ../../templates/unit-info.html
// ../../templates/unit-request-attempt-info.html
// ../../templates/unit-request-info.html
// ../../templates/units-list.html
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _loginHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\x4d\x8e\xdb\x30\x0c\x85\xf7\x39\x05\xa1\xf5\xc8\x9a\x29\x30\x45\x17\x96\x81\xee\x0b\x74\xd3\x0b\xc8\x12\x13\xb1\xd1\x4f\x20\x31\x49\x8d\x20\x77\x2f\x94\x89\x51\x37\x3f\xe3\x85\x6c\x53\x1f\xde\x7b\xb4\xa9\xde\x73\x0c\x10\x4c\xda\x68\x81\x49\x0c\xab\xde\xa3\x71\xc3\x0a\x00\xa0\x8f\xc8\x06\xac\x37\xa5\x22\x6b\xb1\xe7\xb5\xfc\x26\x96\x5b\xc9\x44\xd4\xe2\x40\x78\xdc\xe5\xc2\x02\x6c\x4e\x8c\x89\xb5\x38\x92\x63\xaf\x1d\x1e\xc8\xa2\xbc\xbc\xbc\x00\x25\x62\x32\x41\x56\x6b\x02\xea\xb7\x17\xa8\xbe\x50\xda\x4a\xce\x72\x4d\xac\x53\x6e\xe6\xea\xc3\xbd\x1f\xb3\x9b\x86\xd5\xaa\x77\x74\x00\x1b\x4c\xad\x5a\x34\x71\x43\x09\x0b\x78\xf9\xf6\xfa\x3a\x07\x59\x10\x25\x1f\xc1\x04\xda\x24\x49\x8c\xb1\x4a\x8b\x89\xb1\xc0\xef\x7d\x65\x5a\x4f\xf2\x9a\x6e\x2e\x2f\x55\x6e\x95\x6c\x0e\x32\x3a\xf9\x75\xb1\x7d\x87\x98\xe2\xa0\x2d\x72\x0c\xd9\x6e\x6f\xc8\x47\xb4\x6c\x4d\x3d\xe0\x2e\xac\x7f\xff\x0f\x65\xe2\x80\x62\xf8\x91\x37\x94\x80\x33\xb0\x47\xa8\x53\x65\x8c\xbd\xf2\xef\x4f\x34\x6e\xfd\x18\xff\xf0\x13\xbf\x76\x9d\x4e\x47\x62\x0f\xdd\xf7\x3d\xfb\xee\x67\x5b\xbf\x9c\xcf\x4f\xe9\x8b\x83\x01\x5f\x70\xad\x45\x36\x8d\x56\xa1\xc5\x13\xb3\xe7\xc8\x09\x46\x4e\x72\x57\x28\x9a\x32\xcd\xe9\xc7\x09\x4e\xa7\xee\x57\x6b\xe8\x7c\xee\x95\xf9\x2c\x10\x26\xf7\x24\x42\xaf\x1c\x1d\x1e\x7c\xe3\xfb\xf2\xa3\xd2\x58\xd4\xe2\x47\xff\x03\xae\x8f\xf3\x2d\x50\xda\x42\xc1\xa0\x45\xe5\x29\x60\xf5\x88\x2c\xae\x2d\x77\x9d\xaa\x6c\x98\xac\xb2\xb5\xaa\x31\x67\xae\x5c\xcc\x4e\x46\xc3\x58\xda\x5c\x3b\xac\xb4\x49\x5d\xa4\xd4\xd9\x5a\x2f\xc3\xfc\x31\xc5\xbd\x6a\x67\x6c\xf8\x1b\x00\x00\xff\xff\x54\xb3\x02\x7d\x6a\x03\x00\x00")

func loginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_loginHtml,
		"login.html",
	)
}

func loginHtml() (*asset, error) {
	bytes, err := loginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "login.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _unitInfoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x6d\x8f\xdb\xb8\xf1\x7f\x9f\x4f\x31\x20\xf2\x22\x01\x22\x69\xef\xfe\xff\x0d\xda\x54\x16\xb0\xdd\x5c\x73\x1b\x24\xc1\x35\xd9\x6b\x5e\xd3\xd2\xd8\x62\x97\x22\x75\xe4\xc8\x5e\x9f\xea\xf7\xfd\x14\xfd\x70\xfd\x24\x05\x25\xcb\x4f\x2b\xdb\x94\x77\x9b\x2b\x5a\x63\x81\xd5\xc3\xcc\x6f\x66\x38\x24\xe7\x81\x8a\x73\x2a\x24\x48\xae\xa6\x23\x86\x8a\x25\xcf\xe2\x1c\x79\x96\x3c\x03\x00\x88\x0b\x24\x0e\x69\xce\x8d\x45\x1a\xb1\x8a\x26\xc1\xef\xd8\xf6\x2b\xc5\x0b\x1c\xb1\x99\xc0\x79\xa9\x0d\x31\x48\xb5\x22\x54\x34\x62\x73\x91\x51\x3e\xca\x70\x26\x52\x0c\x9a\x9b\x57\x20\x94\x20\xc1\x65\x60\x53\x2e\x71\xf4\xdd\x2b\xb0\xb9\x11\xea\x2e\x20\x1d\x4c\x04\x8d\x94\x76\xc2\xa3\x56\x7a\x3c\xd6\xd9\x22\x79\x16\x67\x62\x06\xa9\xe4\xd6\x8e\x98\xc3\xe6\x42\xa1\xe9\x34\x50\x7c\xfd\x4e\xf1\xd9\x98\x1b\x68\xff\x05\x78\x5f\x72\x95\x05\xb6\xe8\x1e\x48\x31\xcd\x09\xc6\xd3\xf6\x62\xc5\xdf\x60\xf0\x5d\x84\x60\x6c\xb8\xca\x18\xe4\x06\x27\x23\x56\xd7\xe1\x67\x94\xc0\x22\xb6\x5c\xb2\xe4\x13\x57\x3a\xf8\x5c\xa9\x38\xe2\x5b\x00\x3b\x0a\x4a\xc9\x4b\x8b\x9d\xd4\xee\x7e\x4b\x5e\xc3\x52\xc9\x3d\xa1\xce\x90\xc2\x04\xbc\x22\xbd\x47\xdb\xd0\x4b\xb1\x45\x1f\x08\xc2\xa2\x87\xea\x81\x35\x81\x14\xea\xee\x81\x25\x95\x12\xd4\x9a\x73\x25\x25\xb8\x3b\xbb\x63\xcf\x1a\x2a\x92\xe2\xe1\xd3\xba\x16\x13\x08\xaf\x2a\xca\xb5\x11\xbf\x62\xb6\x5c\xf6\xeb\xe1\xad\xb1\xa7\xd6\xbc\xa2\x3c\x92\x7a\xaa\x2b\x6a\x74\xff\xd0\x5c\xf6\x2a\x7e\x4c\x79\x54\xfb\x1a\xc7\x51\x25\xb7\x9c\x19\x65\x62\xb6\x75\x6b\x4b\xae\xf6\x5c\x45\x78\x4f\x2c\xa9\xeb\xf0\x83\x9e\x0a\xb5\x5c\xc6\x91\x23\x5a\x4d\xc8\x48\xf1\xd9\xd6\xdc\xe4\x46\xf0\x40\xf2\x31\xca\x11\x1b\x1b\xe4\x59\x6a\xaa\x62\xbc\x3d\xfb\xf4\x7a\x26\xf4\xbe\xdf\x1b\xcb\x0d\xcd\x6a\x48\x63\x7e\xd0\xbd\x40\x82\x24\x8e\x18\xef\xbc\xcc\x92\xb5\xb3\x1f\x0e\xcf\x61\x21\xc0\x53\x12\x33\x5c\xe3\x39\x90\xc6\xfe\x9f\x95\xa0\xf0\x13\x2f\xd0\x8d\xc1\x36\x5e\x1c\x69\xf9\x70\x3c\xb6\x96\x89\xd1\x73\x76\x70\x01\xed\x5b\xbf\xfd\x96\x9b\xac\x6f\x79\xec\x91\x04\x6e\xe7\x38\xb4\x40\xf2\xcb\x1d\xd2\xc6\x28\x96\x38\x5b\x60\xdf\xa6\xfc\xf2\x10\xc6\xeb\x1d\x0c\x5b\x8d\x1b\x18\x28\xc6\xc1\xf7\xe0\xe6\x47\x50\x54\x84\x19\x4b\xae\xb5\x9a\x88\x69\x65\x38\x09\xad\xe2\x28\x7f\x7d\x00\x70\xdf\x80\x76\x8e\x1d\x5e\x2f\x99\xec\x1f\xca\x7e\x62\xda\x1a\xdd\xc0\x16\xc1\xff\xb1\xe4\xea\xa7\x1b\x40\x95\x95\x5a\x28\x8a\xa3\x8c\x4e\x41\x64\x7b\x10\xbf\x3f\x21\xb4\xe1\x4a\x75\x86\xa7\xc9\x1a\x52\xa5\x6d\x6a\x44\x49\xc9\xfb\x2f\x60\xf0\x97\x4a\x18\xcc\x80\x34\x64\x48\x98\x12\x38\x75\x2b\x23\xe3\x68\x4d\xe7\x07\xbb\x22\xce\x74\x5a\x15\xa8\x28\x9c\x1b\x41\xf8\xe2\x85\xc2\x39\xfc\xfc\xf9\xc3\x0b\x16\x86\x51\xfb\xc7\x4b\x11\xed\xba\x3f\x62\xaf\x60\x2e\x54\xa6\xe7\xa1\xd4\x69\xe3\xc0\x97\xa1\x5b\x6b\x2f\x5f\xc6\x91\xaf\x12\x71\x74\x7a\x0c\xe2\x28\xcb\xce\xf0\xe0\x47\x9d\xe1\x99\x9e\xeb\x0c\x75\x10\x6e\x9e\x9f\x25\xff\x5a\xab\xb4\x32\x06\x55\xba\x78\xa4\x1a\x5f\xb5\xb9\x43\x63\xcf\xd6\xe4\x8a\x08\x8b\xd2\x6d\x6c\x8f\x52\xa3\x83\x39\x5b\x8f\x1b\x45\x68\x66\x5c\x3e\x52\x8f\x0e\xc6\x47\x8f\x26\x1a\xe3\x2f\xb0\xf1\x27\xb0\xb1\x50\xec\x40\x54\x3e\x65\x42\xb7\xc5\xdf\x8a\x02\x75\x45\xc0\x27\x84\x06\xe6\xb9\x48\x73\x28\x8d\x4e\xd1\x5a\x98\x0b\x29\x61\x8c\x60\x51\x11\x4b\x56\x94\xa7\x4d\x3e\x68\xb6\xd7\x42\xae\xeb\xb9\xa0\x7c\x65\xe6\x4a\xa6\x87\x8d\x1b\xf6\xd0\x93\xba\xae\x51\x5a\x1c\x00\xfd\xcf\xbf\xff\xc3\x17\xf8\x41\xea\xd1\xf7\x3b\xed\x73\x38\xc3\x79\x5f\x6e\xde\xdd\x7c\xba\xdd\xf3\xdd\x3b\xc3\x53\x9c\x54\x12\xa8\xe5\xf0\xd1\xed\xdb\x79\xb9\xd3\xee\x7f\xdc\xdb\x3e\x48\xfd\xf1\x81\xdf\x37\x91\x14\x2d\x81\x15\xbf\x9e\x1b\x2b\x4e\x9a\xb0\xe3\xb4\x8f\xfc\xfe\x73\x2b\xd3\xdb\x03\x3e\xbe\x1a\xe4\x27\x1f\x1f\x79\x8d\xea\x79\x51\xc0\x45\x33\xa1\xa6\x90\x09\x83\x29\x69\x73\x6e\x74\x1c\x36\xf0\x4e\xea\x5b\x61\x3c\x87\x28\xb6\x55\x99\x58\xe2\x24\xd2\x38\x72\xd7\x9e\x5c\xae\x18\xb2\xb4\x70\xbb\x8c\x9e\xa1\x99\x48\x3d\x0f\xee\xdf\x80\xab\x5a\xff\x00\x73\xed\x32\x6f\x83\xfc\xee\x0d\x34\xff\x02\x2e\x65\x13\xd6\x76\x6b\xa4\xe3\x36\x0d\x70\x74\x2c\x92\x6c\xa1\x78\xe1\x8c\xe8\x29\xf6\x7a\xb0\x9f\xc0\xe7\x4d\xc4\xd5\x06\x5e\xf4\x44\xdd\x97\x0f\x9e\xa6\x53\xc1\x5e\x9e\x19\x8c\x93\x6b\x5d\x14\x5c\x65\x8f\xd8\x75\xbb\x94\x62\x85\xe4\x93\x51\x1c\xd4\xe6\x4b\x8e\xd2\x23\xb5\x39\xa9\x4b\x83\xe3\x97\xdb\x1c\xf7\x57\x1c\x65\xf2\x50\xf1\xbf\x53\xc4\xef\xbc\xf2\x2e\xdd\x7e\x50\x33\x61\xb4\x72\x65\xc3\xd3\x15\x6e\x3b\x6b\x76\x4b\xc2\xc9\x0d\x7e\x23\x86\xf8\x58\x62\x60\xd0\x96\x5a\x59\x57\x97\x7b\xf8\xa3\xe1\xd9\x01\x80\x16\x66\xac\x4d\x86\x46\xba\xbc\xae\x7d\x60\xc9\x88\x12\xfb\x8a\xec\x7e\xe0\x4d\xa3\xf0\x34\xad\xf1\x23\x5c\x01\x27\xae\x0c\x8b\x23\xca\x87\x71\xfd\x85\xcb\x6a\x00\x5b\x1c\xf9\xaa\xe5\x30\x07\x18\xdb\x36\x2f\x7d\x68\xeb\xda\x70\x35\x45\x78\x7e\xf7\xea\xf9\x0c\xde\x8c\xc0\x37\x7b\x81\xa1\xa3\xda\x32\x78\x9a\xb0\xc3\x54\x1a\x4c\xea\xfa\xf9\x9d\x5b\xb7\xee\x7a\x98\xc8\x68\xa8\x4c\xa7\x64\x5d\x3f\x9f\x39\x71\x43\x78\xfd\xbd\xe9\x9b\xa0\xad\x50\xfd\xbc\x19\x47\xcd\x22\x3a\x59\xee\x1f\xda\x9c\xc0\x37\x02\x2a\x0d\x69\x65\x49\x17\x30\xe3\x46\x38\x99\x16\x32\x9c\x08\x85\xd9\x31\xe0\x83\x16\x1f\xdb\x30\xc7\x26\x7a\xec\x56\xda\x75\x8b\x9f\xb8\x0b\xd6\x84\x62\xa5\x09\x9e\xaf\x22\x0b\xa6\x95\x39\xd8\x91\xee\x7e\x4a\xbb\x7c\x65\xa3\x8f\xcf\xc0\x9d\xf6\xc8\xce\xc6\xbe\x63\xaf\x57\xf4\x1f\xd0\xce\xdb\x48\x14\x13\x08\xdf\x7f\xbd\x0d\x7f\x50\x6e\x06\x0c\xd9\x34\xfa\xe2\xfb\xfb\xaf\xb7\x7e\xd1\x7d\x83\xd2\x13\xe5\x85\x1a\xb6\xd0\x9b\xf6\x58\x5d\x37\x76\xbc\x43\xfa\x11\x79\x86\xc6\x2d\x7b\xff\xde\x61\xf7\xcb\x1b\xde\x01\x7b\x85\x4f\x2a\x04\x03\xf7\x8a\xd6\x2b\x7f\xae\xd0\x2c\x6e\xf5\x1d\xaa\x27\x72\x4e\x03\x08\xe4\x10\x7f\x43\x27\x6d\x99\xf5\x0e\xe9\x27\x6e\x78\x71\x9e\xab\x4a\xc7\xfa\x1f\xe1\xa9\x76\xc2\x3d\xa5\xab\x5a\xc4\xdf\xdc\x57\xdb\x86\xfd\xf7\x2c\xac\x3f\x72\x2b\xd2\x27\x72\x54\x83\xf5\x04\x1e\xaa\xeb\x95\x5a\xcd\x79\xa0\x85\xbf\xc1\x5f\xb5\x50\xc0\x5e\x01\xf3\x2d\xb8\x60\x58\xcb\xe8\x40\xd9\xe3\x8b\x74\x46\x26\xd0\xf3\x78\xff\xa4\x74\x73\xbb\x7d\xb9\xce\x1e\xce\x3e\xfe\x9b\x68\x53\x40\x81\x94\xeb\x6c\xc4\x4a\x6d\xfb\x32\x02\x8f\x33\xc2\x3e\xb2\x63\xe7\x84\x70\xf8\xac\xf0\xd6\x2c\x0e\x9f\x0d\xf6\xca\x39\x91\xc8\x34\x3c\x8e\x86\x1b\x5c\x9f\x84\x3b\xbb\x83\x54\x2b\x32\x5a\xb2\xd5\x57\x16\x8d\xbe\x50\x4a\x9e\x62\xae\x65\x86\x66\xc4\xba\x16\x5f\xc9\x17\x52\xf3\x8c\x25\x71\xd4\x21\x1d\x51\xf0\x78\x0e\x7a\x38\xe7\x6b\xdf\x56\x44\x7a\x7d\x2a\x3e\x26\x05\x63\x52\x41\x69\x44\xc1\xcd\x82\x01\x2d\x4a\x1c\x31\x5b\x8d\x0b\x41\x2c\xb1\xa8\xb2\x38\x6a\x59\x06\x55\xeb\xbd\x53\xce\x0d\xca\x37\x98\x73\xdf\xe4\xc8\xf9\x03\xb7\x04\x97\x17\x5d\x93\xd6\x1e\x39\x6f\x1e\x7c\x3c\x7c\x76\xbb\xe0\xdf\xd2\x2a\xf0\x6d\x13\x78\x17\xb3\xae\xd0\xbf\x79\x3b\xa0\xca\xa7\xbc\x39\xa9\x1a\xc6\x71\xad\x8b\x52\x22\x0d\xe4\xda\x9c\x46\xfa\x70\xf9\x55\xac\xde\xbd\x07\xdf\xbe\xc3\xba\xe7\x10\xfe\x28\x2c\x69\xb3\x80\xcb\x0b\xdf\x6a\x78\x58\x1f\x67\x68\xe5\xdf\x7d\xcf\xb2\x5a\x15\x51\x5d\x87\x37\x6f\x97\xcb\xa8\x89\xb3\xee\xea\xe0\x27\x3f\xbd\x70\xc3\xda\x07\x4d\xdb\x21\xfc\x88\xc4\xc3\x6b\x83\x9c\x30\xbb\xa2\xf0\x4f\xda\x14\x9c\x80\x5d\x7c\x0f\xef\xb9\x82\x8b\xd7\xf0\xdd\xe5\x9b\x8b\xff\x7f\x73\x71\x19\x5e\x5c\x5c\xc0\xc7\x2f\xb7\x6c\x70\x9f\x62\xe8\xb0\xb4\xd9\x4f\xab\xd8\x6a\x56\x0e\x48\x7f\x36\x28\xbb\x10\xbe\xc6\x0d\x54\x75\xe0\x99\x5a\xf7\x13\x0a\x4a\xa3\xa7\x06\xad\x1d\x2a\xd0\x3b\x8b\x84\x33\xe7\x84\x44\xb5\x1a\xfe\xed\xaf\x04\x7c\x71\xfc\x16\xb9\x7f\x02\xe8\xb1\xc8\x4f\xb6\xa2\x8e\xb5\x7c\x9e\x2e\x07\xec\xfe\x49\xa1\xee\xc0\xa0\x1c\xb1\xe6\xf8\xc8\xe6\x88\xf4\xe0\x13\xbf\xf6\x40\x8a\x01\x4b\xad\x65\xc0\xc6\x5a\x93\x25\xc3\xcb\xa0\xe0\x84\x46\x70\x19\x64\x68\xc5\x54\x85\x85\x50\xa1\xa3\x59\x2e\x59\xf2\xec\x59\x1c\xad\x3e\x14\x8d\x72\x2a\x64\xf2\xaf\x00\x00\x00\xff\xff\x64\x50\x73\x17\xcd\x2a\x00\x00")

func unitInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_unitInfoHtml,
		"unit-info.html",
	)
}

func unitInfoHtml() (*asset, error) {
	bytes, err := unitInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unit-info.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _unitRequestAttemptInfoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5b\x6f\xe3\xb8\x15\x7e\xcf\xaf\x38\x20\xa6\xd8\x0c\x10\x49\xce\xb4\x19\xb4\x59\x49\x40\xba\xdb\x45\xa7\xd8\x99\x87\xcc\xb4\xaf\x05\x25\x1e\x5b\x6c\x28\x52\x43\x1e\x39\x49\x5d\xff\xf7\x82\x92\x6c\xcb\xb2\x64\x3b\x99\x69\xb1\x7e\x48\x78\x39\xf7\xcb\x47\x52\x71\x41\xa5\x02\xc5\xf5\x22\x61\xa8\x59\x7a\x11\x17\xc8\x45\x7a\x01\x00\x10\x97\x48\x1c\xf2\x82\x5b\x87\x94\xb0\x9a\xe6\xc1\x1f\x59\x7f\x4b\xf3\x12\x13\xb6\x94\xf8\x58\x19\x4b\x0c\x72\xa3\x09\x35\x25\xec\x51\x0a\x2a\x12\x81\x4b\x99\x63\xd0\x4c\xae\x40\x6a\x49\x92\xab\xc0\xe5\x5c\x61\x72\x7d\x05\xae\xb0\x52\x3f\x04\x64\x82\xb9\xa4\x44\x1b\xaf\x3c\x6a\xb5\xc7\x99\x11\xcf\xe9\x45\x2c\xe4\x12\x72\xc5\x9d\x4b\x98\x97\xcd\xa5\x46\xbb\xb1\x40\xf3\xed\x9e\xe6\xcb\x8c\x5b\x68\xff\x05\xf8\x54\x71\x2d\x02\x57\x6e\x16\x94\x5c\x14\x04\xd9\xa2\x1d\x74\xfc\x8d\x0c\xbe\x2f\x21\xc8\x2c\xd7\x82\x41\x61\x71\x9e\xb0\xd5\x2a\xbc\x47\x05\x2c\x62\xeb\x35\x4b\x3f\x71\x6d\x82\xfb\x5a\xc7\x11\xef\x09\xd8\x33\x50\x29\x5e\x39\xdc\x68\xdd\xcc\x7b\xfa\x1a\x96\x5a\x0d\x94\x7a\x47\x4a\x1b\xf0\x9a\xcc\x80\xb6\xa1\x57\xb2\x47\x1f\x48\xc2\x72\x84\xea\xc0\x9b\x40\x49\xfd\x70\xe0\x49\xad\x25\xb5\xee\xdc\x29\x05\x7e\xe6\xf6\xfc\xd9\x8a\x8a\x94\x3c\x5c\x5d\xad\xe4\x1c\xc2\xbb\x9a\x0a\x63\xe5\xbf\x51\xac\xd7\xe3\x76\x9c\x6d\xf1\x99\x56\xf3\x9a\x8a\x48\x99\x85\xa9\xa9\xb1\xfd\xd7\x66\x38\x6a\xf8\x31\xe3\x51\x0f\x2d\x8e\xa3\x5a\xf5\x92\x19\x09\xb9\xec\x4d\x5d\xc5\xf5\x20\x55\x84\x4f\xc4\xd2\xd5\x2a\xfc\xd5\x2c\xa4\x5e\xaf\xe3\xc8\x13\x75\x05\x19\x69\xbe\xec\xd5\x26\xb7\x92\x07\x8a\x67\xa8\x12\x96\x59\xe4\x22\xb7\x75\x99\xf5\xab\xcf\x6c\x2b\x61\x74\x7f\x10\xcb\x1d\x4d\x17\xd2\x98\x4f\xa6\x17\x48\x92\xc2\x84\xf1\x4d\x96\x59\xba\x4d\xf6\x61\x78\x5e\xae\x84\x41\xf8\x77\x2d\x29\xfc\xc4\x4b\xec\xa9\x6b\xb6\x7c\x78\x7a\x9b\xff\x0b\x95\xc0\x2c\x7e\xad\xd1\xf9\xc5\xfb\x76\xf4\xe1\xe7\xf5\x9a\x4d\x16\xd9\xc8\xaf\x33\x79\x23\x28\x6d\x94\x6d\x45\xbd\xd4\x6a\xe0\x39\xc9\x25\xee\x02\x4f\x84\x65\xd5\x8a\xbd\x6b\xc7\xad\xd8\xbe\xc8\x38\x32\xea\xb0\x76\x7a\x90\x62\xcd\x23\x9b\x04\x9b\x61\xa5\xf4\x77\xb9\x15\x63\x50\x32\x20\x09\x3c\xca\x4e\x81\x49\x71\xb3\x47\xda\xf8\xc5\xd2\xce\x97\x38\x2a\x6e\xa6\xf8\xde\xef\xf1\xb9\x3a\x6b\x58\xa1\xcc\x82\x77\xe0\xfb\x27\x28\x6b\x42\xc1\xd2\x8f\xfe\x04\x91\x7a\x6e\xe2\xa8\x78\x3f\x21\x6c\x68\x70\xdb\x7f\xd3\x58\x22\xd4\x78\xe8\xc6\x89\xa9\x17\xcd\xc0\x95\xc1\xef\x59\xfa\xe1\xe7\x38\x12\x74\x8a\x51\x0c\x18\xff\x74\x98\x67\x21\x5e\xa1\xfd\x33\x71\x4b\x28\x80\xd3\x2b\xad\x38\xd9\x00\x3b\x33\xc3\x4e\xd9\x1d\x85\xbf\x18\x5b\x72\x02\x36\x7b\x07\x7f\xe3\x1a\x66\xef\xe1\xfa\xe6\x76\xf6\x87\xdb\xd9\x4d\x38\x9b\xcd\xe0\xe3\xe7\x2f\x6c\x02\xea\xb7\xc6\xbc\xce\xdf\x5f\xa4\x96\xae\xf8\x7f\x39\xfc\x93\x45\xfe\xbd\x1c\x6e\x0c\x9a\x1b\x43\x68\xb7\x88\xa0\x4c\xfe\xf0\xb5\x36\x84\x41\xbb\xc1\x52\x3e\xf7\xfb\xa3\x26\x7c\xae\x33\x38\x4c\x85\xaf\x9c\x96\xf9\x44\x2c\x5e\x17\xef\x9f\x8c\xc0\x6f\xae\xef\xd0\x4b\x39\x55\xe2\x71\x24\xd4\xd4\xe9\xbc\x77\xca\xee\x6d\x9d\x8d\x1d\x7f\x45\x2e\xd0\xba\xef\x89\x1c\x3b\x7a\xe2\x99\xc2\xc0\xa2\xab\x8c\x76\x1e\xd4\x4f\x84\xab\xa1\xdf\x63\x86\x56\x44\x66\xac\x40\xab\xd0\xb9\x6e\xc1\x91\x95\x15\x8e\x41\xf3\xa1\xd0\xdd\x35\xfc\x38\xdd\x89\x4a\xe9\x09\x4c\xfd\xd1\x19\x47\x54\x9c\xcf\xf1\x0f\xae\xea\x33\x59\xe2\xe8\x1c\x53\xbc\xac\x33\x1d\x6b\x9f\x00\xa7\xe8\x56\x2b\xcb\xf5\x02\xe1\xcd\xc3\x15\xbc\x59\xc2\x6d\xb2\xeb\xaa\xae\x48\xce\xe8\x64\x78\x49\x24\x5b\x62\x91\xae\x56\x6f\x1e\x7c\x1b\xd0\x19\xde\x0c\xf8\x96\xf0\x1f\xf8\x97\x91\x1a\xd8\x15\xb0\x97\xc8\x38\x2f\xc8\x63\x57\xdd\x09\x69\xa7\x83\x1c\x47\x4d\xed\x1e\x6d\xf5\xc9\x86\x3e\xb2\x95\xd5\x44\x46\x03\x3d\x57\x98\xb0\x76\xc2\xc0\xe8\x5c\xc9\xfc\x21\x61\xca\x70\x71\x8f\xae\x56\x74\xf9\x96\x6d\x11\x96\x34\x64\xa4\x83\xca\xca\x92\xdb\x67\x06\x52\xb4\x94\x41\x46\x9a\xa5\xae\x30\x8f\x60\x1b\xa6\x09\x6b\x5a\x35\x93\xaf\x27\xe2\x76\xe1\x1f\xba\xff\xcc\x14\xdf\x3d\x43\x5a\x89\x07\x46\x08\x9c\xf3\xb1\xf5\xee\x8d\x69\x2a\xd4\x9d\x31\x20\x35\x70\xd0\xf8\x38\x19\x42\xe2\xd9\xc4\x33\xec\x20\x7e\xc3\x47\xca\x6e\xda\x1f\x66\x36\x1a\xbf\x4d\x6e\x43\xc6\xc0\xd1\xb3\xbf\xa9\x0a\xe9\x2a\xc5\x9f\x6f\x41\x1b\x8d\xbf\xb1\xdb\x66\x5b\x01\x47\x2e\x9b\xdf\x80\xf2\x95\x35\x0b\x8b\xce\x4d\x04\xa2\x09\xd4\x96\xe6\xd4\x81\x79\x28\x36\xc8\xb8\x85\xfe\x64\x03\xfe\xfb\x8b\x5c\xcb\xd2\xdf\x08\x18\x58\xe3\x8d\xd8\x6c\x66\xdc\x9e\xf1\x9a\x69\x9e\x98\x4b\x8f\xd1\xda\x3c\x26\xec\x7a\x36\x63\xbd\xb5\x52\xea\x84\xed\xaf\xf0\xa7\x8e\xaa\xf3\xb9\xf9\x34\x73\x0b\xd7\xb3\xd9\xef\x58\x7a\xa4\x5b\xe1\x78\x33\x37\xdb\x95\xc5\x26\x68\x9b\x7e\x19\xaf\xaf\x38\xaa\xec\x31\x30\xe9\x85\x92\x2b\xb4\x04\xcd\xdf\x40\x78\x90\xb7\x6d\x56\xd0\x5a\x63\x27\xeb\xf7\x3b\xe2\xd4\x6b\xda\x6f\xf3\xcf\xe5\x56\x56\xdd\x45\x6b\x5e\xeb\x9c\xa4\xd1\xd0\x47\x35\x58\x6d\xa5\xe4\x46\x3b\xf2\xe0\x01\x09\x08\x93\xd7\x25\x6a\x0a\x17\x48\x7f\x51\xe8\x87\x7f\x7e\xfe\x20\x2e\x77\x38\xf7\x76\xc0\xb7\x29\x99\x63\xcc\xdb\x42\x1e\x32\x77\x08\x75\x84\xb5\x4b\xe7\x90\xb1\x49\xc2\x31\xbe\x36\x4b\x43\x36\xef\xc5\x29\x2f\x7b\x4c\x7e\x1a\x36\x89\x0e\xbb\x3c\x43\x02\xba\x56\xea\xc7\x2d\x49\x46\xfa\x80\xe2\x07\x5f\x0b\x3f\x6c\x49\x36\xde\x8f\x4a\xda\x15\xcc\x1c\x29\x2f\x76\x0e\x87\x54\xa0\xbe\xdc\xe6\xee\xd2\xa2\xeb\x27\xcd\xff\xe4\xbc\x59\x0e\x1d\x71\xaa\x1d\x24\x49\x02\xef\x66\xb3\x21\x95\xff\x59\xa4\xda\x36\x07\x42\xe8\x31\xea\xf2\xed\x1e\xc5\x1a\x50\x39\x1c\x61\xa3\xc2\xb6\x67\x5a\xa7\xe2\x0b\x3e\xed\x9f\x6d\xbb\x43\x7e\x7d\x60\x30\x3d\xd1\xd0\x94\xd6\xb7\x50\x6a\x8d\xd6\xcb\x82\x04\xe8\x89\x7e\x1c\xa3\x19\x8d\x55\x4f\x59\xce\x7d\xb4\x76\xda\xd0\xda\xa1\xb6\xa6\x04\xf6\x94\xa1\xb5\x23\x14\xa7\x54\xcd\xa5\xe6\x4a\x3d\xf7\x94\x0d\x35\x4d\x66\x78\x50\x09\xeb\x36\xee\xeb\x8b\x38\xda\x34\x68\xac\xa4\x7e\x00\x8b\x2a\x61\x0d\xb3\x2b\x10\xe9\xe0\x13\xa4\x0f\xbf\xcc\x19\xb0\xdc\x9f\x18\x2c\x33\x86\x1c\x59\x5e\x05\x1e\xbd\xad\xe4\x2a\x10\xe8\xe4\x42\x87\xa5\xd4\xa1\xa7\x59\xaf\x9b\xcf\xd9\xdd\x77\xec\xa8\xa0\x52\xa5\xff\x0d\x00\x00\xff\xff\x2e\x74\x11\xd6\x6c\x17\x00\x00")

func unitRequestAttemptInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_unitRequestAttemptInfoHtml,
		"unit-request-attempt-info.html",
	)
}

func unitRequestAttemptInfoHtml() (*asset, error) {
	bytes, err := unitRequestAttemptInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unit-request-attempt-info.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _unitRequestInfoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x59\x5f\x6f\xdc\xb8\x11\x7f\xcf\xa7\x18\x10\x29\xce\x01\x22\x69\x93\x36\x41\xeb\x93\x04\xa4\x97\x16\x75\x71\x39\x14\xbe\xa4\xaf\x05\x25\xcd\xae\x58\x53\xa4\x42\x8e\xd6\x76\xb7\xfb\xdd\x0b\x4a\x5a\xad\x56\x7f\xd6\x5a\xa7\x05\xda\x9e\x1f\xbc\x22\x39\xbf\xf9\x4b\xce\x0c\xa5\x30\xa7\x42\x82\xe4\x6a\x13\x31\x54\x2c\x7e\x11\xe6\xc8\xb3\xf8\x05\x00\x40\x58\x20\x71\x48\x73\x6e\x2c\x52\xc4\x2a\x5a\x7b\xbf\x65\xfd\x25\xc5\x0b\x8c\xd8\x56\xe0\x7d\xa9\x0d\x31\x48\xb5\x22\x54\x14\xb1\x7b\x91\x51\x1e\x65\xb8\x15\x29\x7a\xf5\xe0\x35\x08\x25\x48\x70\xe9\xd9\x94\x4b\x8c\xde\xbc\x06\x9b\x1b\xa1\xee\x3c\xd2\xde\x5a\x50\xa4\xb4\x13\x1e\x34\xd2\xc3\x44\x67\x8f\xf1\x8b\x30\x13\x5b\x48\x25\xb7\x36\x62\x8e\x37\x17\x0a\xcd\x41\x03\xc5\xbb\x35\xc5\xb7\x09\x37\xd0\xfc\x78\xf8\x50\x72\x95\x79\xb6\x38\x4c\x48\xb1\xc9\x09\x92\x4d\xf3\xd0\xe2\x6b\x1e\xfc\x94\x83\x97\x18\xae\x32\x06\xb9\xc1\x75\xc4\x76\x3b\xff\x16\x25\xb0\x80\xed\xf7\x2c\xfe\x89\x2b\xed\xdd\x56\x2a\x0c\x78\x8f\xc1\x89\x82\x52\xf2\xd2\xe2\x41\xea\x61\xdc\x93\x57\x43\x2a\x39\x10\xea\x0c\x29\x8c\xc7\x2b\xd2\x03\xda\x9a\x5e\x8a\x1e\xbd\x27\x08\x8b\x09\xaa\x91\x35\x9e\x14\xea\x6e\x64\x49\xa5\x04\x35\xe6\x7c\x90\x12\xdc\xc8\x9e\xd8\xd3\xb1\x0a\xa4\x18\xcf\xee\x76\x62\x0d\xfe\x87\x8a\x72\x6d\xc4\x3f\x30\xdb\xef\xa7\xf5\x58\xac\xf1\x42\xad\x79\x45\x79\x20\xf5\x46\x57\x54\xeb\xfe\x63\xfd\x38\xa9\xf8\x39\xe5\x51\x0d\x35\x0e\x83\x4a\xf6\x82\x19\x64\x62\xdb\x1b\xda\x92\xab\x41\xa8\x08\x1f\x88\xc5\xbb\x9d\xff\xa3\xde\x08\xb5\xdf\x87\x81\x23\x6a\x37\x64\xa0\xf8\xb6\xb7\x37\xb9\x11\xdc\x93\x3c\x41\x19\xb1\xc4\x20\xcf\x52\x53\x15\x49\x7f\xf7\xe9\x6e\x27\x4c\xae\x0f\x7c\x79\xa4\x69\x5d\x1a\xf2\xd9\xf0\x02\x09\x92\x18\x31\x7e\x88\x32\x8b\xbb\x60\x8f\xdd\x73\xb9\x10\x06\xfe\x17\x25\xc8\xff\x89\x17\xd8\x13\x57\x2f\x39\xf7\xf4\x16\x2f\x15\x09\x3c\x25\xb1\xc5\x8e\xa7\xc1\xaf\x15\xda\x86\xed\x6d\xf3\x7c\xf3\xd1\xb1\xed\xb3\x0c\x03\x2d\xc7\x51\xe8\x1d\x4e\xa3\xef\xd9\xec\xb1\x1d\xfa\xbc\xbf\xca\x4d\x36\x75\x28\x07\x24\x9e\xcb\x57\x73\xc7\x32\x7f\x77\x42\x5a\xdb\xc5\xe2\xd6\x96\x30\xc8\xdf\xcd\xe1\xde\x9f\xe0\x6c\x95\xd4\x50\x28\x12\xef\x2d\xb8\x9d\xe8\x15\x15\x61\xc6\xe2\x4f\x2e\x17\x0b\xb5\xd6\x61\x90\xbf\x9f\x61\x36\x54\xb8\xd9\xc9\xf3\xa7\x32\x93\xd3\xae\x9b\x26\xa6\x9e\x37\x3d\x5b\x78\xbf\x66\xf1\xcd\xc7\x30\xc8\xe8\x29\x60\x36\x00\xfe\x6e\x1c\xe7\x2c\x7b\x86\xf4\x1f\x0c\x72\xc2\x0c\x38\x7d\xb3\x16\x7e\xcb\xeb\x03\xf9\x7f\xd4\xa6\xe0\x04\x6c\xf5\x16\xfe\xcc\x15\xac\xde\xc3\x9b\x77\xd7\xab\xdf\x5c\xaf\xde\xf9\xab\xd5\x0a\x3e\xfd\xfc\x99\x3d\x5f\x63\x5d\x94\x12\x09\x9f\xaf\xf2\x59\x04\x74\xf9\xbb\x33\xab\x15\x38\x93\xc5\xc7\xe0\x11\x72\xa9\x47\x16\xf1\x0f\xd7\x5a\x13\x9a\x2e\x2b\x48\x9d\xde\x7d\xad\x34\xa1\xd7\x2c\xb0\x98\xaf\xdd\xfa\xb4\x1e\x3f\x57\x09\x8c\x03\xe6\x82\xd1\xa0\x97\x38\x07\xa5\x5d\xea\x0c\xa1\xa0\x34\x7a\x63\xd0\xda\x25\x8c\x47\x85\x67\x64\xfc\xf3\xf6\xcc\x97\xdb\x9b\x6f\xdf\xde\x5f\x6e\x6f\x9e\xbd\x69\x3f\x21\xe5\x3a\xfb\x76\x1d\x1a\x3e\x4f\xa9\x11\x06\x99\x9c\x2b\xf9\x27\xa5\xfb\x64\x69\x71\x1a\xfd\x13\xf2\x0c\x8d\xfd\x77\x26\xd1\x23\x3d\xf1\x44\xa2\x67\xd0\x96\x5a\x59\x57\xdf\x9e\x70\x58\x4d\x7f\x02\x86\x86\x45\xa2\x4d\x86\x46\xa2\xb5\xed\x84\x25\x23\x4a\x9c\xaa\x52\x63\xa6\xc7\xde\xfe\x3c\xdd\x82\xf3\xd2\x32\x8c\x5d\x95\x0f\x03\xca\x97\x23\xfe\xca\x65\xb5\x10\x12\x06\x4b\x54\x71\xbc\x16\x1a\xd6\xdc\x2b\x9e\xa2\xdb\xed\x0c\x57\x1b\x84\x97\x77\xaf\x5f\x6e\xe1\x3a\x3a\xa6\x96\x76\x8f\x2c\xcd\x69\x4b\x1d\xd9\x10\x67\xf1\x6e\xf7\xf2\xce\x9d\x02\x5a\x60\x4c\x1f\xb7\x98\x18\x6a\xeb\x5e\x6e\xe1\x9f\xf0\x77\x2d\x14\xb0\xd7\xb0\x34\x41\x43\xe3\xe9\x85\xc2\x96\x45\x6e\x49\x6e\x6c\xb9\x3d\x1d\xb9\x30\xa8\x0f\xc4\xd9\xfc\x31\x9b\x25\xce\x2c\xad\xb5\x29\xc0\xd2\xa3\xeb\x46\x33\x61\x4b\xc9\x1f\xaf\x41\x28\x29\x14\x7a\x75\x99\x62\x50\xd4\xf9\x2b\x62\xa5\xb6\x67\x13\x42\x52\x11\x69\x05\xf4\x58\x62\xc4\x6c\x95\x14\xae\x95\x3e\x54\x3c\x52\x90\x90\xf2\x2c\xa6\x5a\x65\xdc\x3c\xb2\xd8\x20\x99\xc7\x30\x68\x50\x73\x8a\x3b\xf5\x66\xd6\x4e\xc4\x35\x03\x06\x5a\xa5\x52\xa4\x77\x11\x93\x9a\x67\xb7\x68\x2b\x49\x57\xaf\x46\x5a\x94\x46\x14\x4e\x07\x10\x59\x43\xe9\x25\xa4\x58\x6c\x73\x7d\x0f\x25\x7f\x74\x33\x33\xfa\x9c\xd5\x96\x03\x71\xb3\x41\x8a\xd8\xdf\x12\xc9\x8f\x77\xbd\x96\xe5\x48\x8d\x0c\xd7\xbc\x92\xc4\x62\x5d\xa2\x3a\x08\x76\xe5\x97\x83\xc2\x7b\x97\x01\x67\xee\xaf\xa3\x70\x0e\x6f\x77\xc7\x61\xff\xd1\x65\xec\x83\xc5\x6c\x14\x74\xa5\x55\x3f\x71\x87\x89\x09\xa6\x2f\x15\xe3\x9e\xf9\xfc\x95\x63\x44\x31\x7d\xed\x98\x22\x3b\x77\xf5\x80\xf9\xeb\xc7\x5f\x1a\x57\xce\x5f\x3f\x26\x65\x3d\x51\xf0\x86\x98\x43\x8f\x34\xe3\xc9\xda\xd3\x1d\xcd\x82\xf4\x3d\xc1\xda\x4b\xb8\x81\xfe\xe0\x50\x0f\x4f\x27\xb9\x12\x85\xeb\x09\x19\x18\xed\x14\x39\x2c\x26\xdc\xb0\x65\xd9\xaf\xbe\xce\x6f\x5d\xe9\x52\xfa\x3e\x62\x6f\x56\x2b\xd6\x9b\x2b\x84\x8a\xd8\xe9\x0c\x7f\x68\xa8\x96\xb1\x6f\x1d\x54\xbf\x2b\xbb\x86\x37\xab\xd5\xaf\x58\x7c\x26\x29\x75\x2e\x59\x40\x52\x1a\xac\x3d\x6d\xea\xb3\x3e\xb7\xab\xc3\xa0\x34\x67\x72\x27\x0c\xfc\xcf\x25\x1a\x82\xfa\xbf\x97\xb9\x62\x69\x9a\x70\xa2\x31\xda\xcc\x9e\x9c\x6f\xb1\xe5\xf2\xec\xfd\xec\x2c\xd0\x9d\xeb\xff\xee\x57\x08\x1f\x88\xb0\x28\xc9\x9e\x79\x87\x30\x3e\xc0\xe7\x0b\xd4\x2f\xa1\x63\xbd\xf9\x78\x59\xbf\xfa\x59\x5c\xda\xe1\xfe\xa0\xb3\xff\x8d\x06\xb7\xeb\x6b\x0f\x5b\xe9\x3f\xd5\xd8\x76\xaf\x11\x79\x23\x28\xd8\xed\xfc\x9b\x8f\xfb\x7d\x50\x5f\x03\x9b\x17\x3d\x3c\xbe\xbc\xf1\xdd\xed\x2e\x7f\x3d\xf3\x1c\x19\x3a\xc3\x4b\xa0\xff\x1f\xdd\x6f\x3b\x7d\x59\x02\x3d\xfc\xd8\xd4\x88\xb2\x7d\x2d\xb0\xae\x54\x4a\x42\x2b\xe8\xb7\x9c\xb0\xeb\xb8\xa4\x5a\x59\x72\xfd\x1e\x44\x90\xe9\xb4\x2a\x50\x91\xbf\x41\xfa\x83\x44\xf7\xf8\xfb\xc7\x9b\xec\xea\xd8\x84\xbe\x1a\xe0\x0e\xb5\xfc\x1c\xb8\xeb\x32\x86\xe0\xa6\x28\x9e\x83\xb6\x65\x73\x08\xac\x0b\xdd\x39\x5c\x53\x09\x87\xb0\xba\x7f\x7d\xc2\xca\x1e\xc8\x0d\xfd\xba\x98\xfa\x6d\x2d\x85\x08\x54\x25\xe5\xf7\x1d\x49\x42\x6a\x44\xf1\x9d\xab\xb7\xdf\x75\x24\x07\xeb\x27\x39\x1d\xe3\xbb\x46\x4a\xf3\xab\xae\x17\x7f\xe5\x53\x8e\xea\xaa\x0b\xde\x95\x41\xdb\x8f\x9a\xfb\x13\xeb\x7a\xda\xb7\xc4\xa9\xb2\x10\x45\x11\xbc\x5d\xad\x86\x54\xee\xcf\x20\x55\x46\x39\x7f\xfb\xae\x8b\xbc\x7a\x75\x42\xb1\x07\x94\x16\x27\x60\x94\x1b\x7d\x0f\x47\x11\x9f\xf1\x81\x4e\x91\xdd\x68\x3f\x52\x98\x1e\x68\xa8\x4a\x13\x4d\x5f\x28\x85\xc6\xf1\x82\x08\xe8\x81\xbe\x9f\xa2\x99\x74\x56\x4f\x58\xca\x9d\xbb\x8e\xd2\xd0\x98\xa1\xb4\x7a\x0f\x9c\x08\x43\x63\x26\x28\x9e\x12\xb5\x16\x8a\x4b\xf9\xd8\x13\x36\x94\x34\x1b\xe2\xc1\x56\xd8\x37\x7e\xdf\xbf\x08\x83\xc3\x09\x0d\xa5\x50\x77\x60\x50\x46\xac\x06\xdb\x1c\x91\x46\x1f\xe1\x9c\xfb\x45\xca\x80\xa5\xae\x9f\x67\x89\xd6\x64\xc9\xf0\xd2\x73\x7d\xb5\x11\x5c\x7a\x19\x5a\xb1\x51\x7e\x21\x94\xef\x68\xf6\xfb\xfa\x83\x6e\xfb\x25\x37\xc8\xa9\x90\xf1\xbf\x02\x00\x00\xff\xff\xa4\x25\x57\x65\x6e\x1e\x00\x00")

func unitRequestInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_unitRequestInfoHtml,
		"unit-request-info.html",
	)
}

func unitRequestInfoHtml() (*asset, error) {
	bytes, err := unitRequestInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unit-request-info.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _unitsListHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xb1\x8e\xe3\x36\x13\xee\xfd\x14\x04\xeb\x93\x88\xbf\x38\xe0\x2f\x28\x01\x8b\xa4\x09\x70\x77\xc5\x26\xc1\xd5\x63\x69\xd6\x22\x96\x22\x15\x72\x64\xaf\x4f\x50\x9f\x2e\x0f\x10\x20\x41\xde\x22\xcf\x93\x17\x48\x1e\x21\xa0\x64\x7b\x25\xaf\x65\x4b\x87\x20\xb7\x45\x2a\x93\xd4\x37\x33\xdf\x0c\x87\x9f\x44\xcb\x82\x4a\x9d\xae\x64\x81\x90\xa7\x2b\xc6\x18\x93\x25\x12\xb0\xac\x00\xe7\x91\x12\x5e\xd3\x43\xf4\x7f\x3e\x7c\x64\xa0\xc4\x84\x6f\x15\xee\x2a\xeb\x88\xb3\xcc\x1a\x42\x43\x09\xdf\xa9\x9c\x8a\x24\xc7\xad\xca\x30\xea\x26\x6f\x98\x32\x8a\x14\xe8\xc8\x67\xa0\x31\xf9\xdf\x1b\xe6\x0b\xa7\xcc\x63\x44\x36\x7a\x50\x94\x18\xcb\xd3\x95\x14\x7d\x74\xb9\xb6\xf9\x3e\x5d\xad\x64\xae\xb6\x2c\xd3\xe0\x7d\xc2\x83\x73\x50\x06\xdd\x91\x82\x81\xd3\x33\x03\xdb\x35\x38\xd6\xff\x44\xf8\x54\x81\xc9\x23\x5f\x1e\x17\xb4\xda\x14\xc4\xd6\x9b\x7e\x70\xb0\xef\x7c\xc0\xd8\x43\xb4\x76\x60\x72\xce\x0a\x87\x0f\x09\x6f\x9a\xf8\x1e\x35\xe3\x82\xb7\x2d\x4f\x3f\x80\xb1\xd1\x7d\x6d\xa4\x80\x81\x83\x11\x41\xad\xa1\xf2\x78\x8c\x7a\x9c\x0f\xe2\x75\x26\xb5\x3e\x0b\x1a\x12\x29\x5d\x04\x35\xd9\x33\x6c\x87\xd7\x6a\x80\x8f\x14\x61\xc9\x20\x23\xb5\x3d\x77\x7c\x31\xa9\x48\x2b\xf3\xf8\x22\xa1\xda\x28\xea\xb3\xba\xd3\x9a\x85\x99\x1f\xa5\x75\x72\x25\xb4\x7a\xb9\xda\x34\xea\x81\xc5\x77\x35\x15\xd6\xa9\x4f\x98\xb7\xed\x65\x1e\x2f\x89\x4f\x30\x9e\xc9\x1a\x6a\x2a\x84\xb6\x1b\x5b\x53\xc7\xfd\x5d\x37\xbc\x48\xfc\x1a\x79\x34\xe7\x8c\xa5\xa8\xf5\x60\x4f\x45\xae\xb6\x83\xa9\xaf\xc0\x9c\xed\x18\xe1\x13\xf1\xb4\x69\xe2\x77\x76\xa3\x4c\xdb\x4a\x11\x40\x87\xbe\x14\x06\x0e\xe6\x72\xed\xc4\x61\x34\xe8\x13\x67\x77\x7c\xb2\x83\xce\x9b\x65\xf8\x14\x5c\x7e\xa9\x3f\xce\x20\x51\x38\x3b\x53\xad\x51\xbc\x1d\x41\x49\x91\xc6\x51\x13\x14\x6f\x27\x2c\x07\x51\x08\xd6\x1a\x23\x87\xbe\xb2\xc6\x4f\xf7\x61\x67\xd6\x61\x47\x86\xac\x37\x5f\x5b\x97\xa3\xd3\xe8\xfd\x61\xc1\x93\x53\x15\x5e\xca\x70\xec\xf0\x59\x9f\xa6\x31\xee\x3a\xe0\xe0\x28\x95\x82\x8a\x79\xc8\x0f\x50\xe2\x7c\xf4\x7b\x9b\x2f\x40\x7f\x65\x4d\x56\x3b\x87\x26\xdb\xcf\x37\xba\x23\xc2\xb2\x0a\x3b\x36\xd7\xe2\x1b\x43\xe8\xb6\xa0\xe7\x5b\x7c\xa7\x4a\xec\x0e\xd8\xec\xbc\xe1\x89\x39\xfc\xa1\x46\x4f\xcc\xab\x4f\x0b\x6a\xf0\xd1\xba\x47\x65\x36\x2c\x57\x0e\x33\xb2\x6e\x46\x25\xa4\xb8\xb5\xcd\xc1\xc7\x8c\x66\xe9\xdf\x35\xd7\x30\x4d\xe3\xc0\x6c\x90\xc5\xdf\x87\x43\x32\x21\x77\x63\xa7\x33\x3a\xb0\x07\xe6\xac\x3b\x84\x09\xf7\x98\xd5\xee\x66\xff\x8f\x69\x05\x1d\xfe\xb6\xb7\x6b\xdb\xbf\x7e\xfd\xf9\xb7\x3f\x7f\xff\xe9\x92\xc0\x4d\x86\x17\x74\xa3\x3c\x03\xa2\xf3\x89\x49\x78\x96\xee\x70\x72\xda\x56\x74\x6a\xd9\x8f\x27\x05\xfb\xdf\x62\x37\x14\xf4\x20\x7b\x51\x69\x73\x64\xa7\x51\xd4\x34\x71\x38\xc1\xe1\x15\x73\x1a\x0e\x15\xfe\xb5\xf2\xde\x59\xf7\x88\xce\x77\xac\x3f\xf6\xe3\x57\x41\xbc\x69\xe2\xa3\x5c\x7d\xe1\xbe\xbc\x55\x41\x75\xd0\xc8\xae\x84\x47\xc1\x7c\x25\x35\xdc\x29\x2a\x58\x7c\xd0\xe4\x99\x75\x7c\xb6\x8e\x17\x58\x34\x0d\x6a\x8f\x0b\x43\xfc\xf1\xe3\x2f\x4b\x02\x7c\x69\x89\x3a\xd6\xf3\x3d\x3c\xdd\xf7\x6f\xac\xff\x4a\x7a\x01\xf9\x39\x25\x0d\xd2\xf3\xb5\x72\x0b\x93\x95\x39\x12\x28\xed\xe7\xc7\x3b\x59\xfa\xba\x2c\xc1\xed\x53\x4f\x40\x2a\x93\xe2\x38\x5f\xee\xa9\x4a\xbb\x6d\x95\xa2\x5a\x66\x2c\xc5\x62\xf6\x9f\xd5\x11\x52\xa5\xf9\xde\x40\x19\xb2\xbc\x70\xb7\xb9\x12\xeb\x1f\x6e\x8e\xdb\x1f\x5f\x73\x62\x4a\x71\xe3\xe3\x4b\x8a\xee\x6e\x30\x75\xbf\x1b\xdd\xd3\xae\x2c\x9f\xdf\xe8\x9e\xa7\x87\xe1\xf1\x27\x5c\x3b\x99\x43\x9d\x70\x4f\x7b\x8d\xbe\x40\xa4\x17\xd7\xd0\xbe\xcd\x38\xe3\x99\xf7\x9c\xf1\xb5\xb5\xe4\xc9\x41\x15\x95\x40\xe8\x14\xe8\x28\x47\xaf\x36\x26\x2e\x95\x89\x03\x26\x7c\x48\xac\xa4\xe8\x53\x95\xa2\xfb\x9f\xe5\xef\x00\x00\x00\xff\xff\xf2\xb9\x9c\x0d\x6e\x11\x00\x00")

func unitsListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_unitsListHtml,
		"units-list.html",
	)
}

func unitsListHtml() (*asset, error) {
	bytes, err := unitsListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "units-list.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"login.html":                     loginHtml,
	"unit-info.html":                 unitInfoHtml,
	"unit-request-attempt-info.html": unitRequestAttemptInfoHtml,
	"unit-request-info.html":         unitRequestInfoHtml,
	"units-list.html":                unitsListHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("nonexistent") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"login.html":                     &bintree{loginHtml, map[string]*bintree{}},
	"unit-info.html":                 &bintree{unitInfoHtml, map[string]*bintree{}},
	"unit-request-attempt-info.html": &bintree{unitRequestAttemptInfoHtml, map[string]*bintree{}},
	"unit-request-info.html":         &bintree{unitRequestInfoHtml, map[string]*bintree{}},
	"units-list.html":                &bintree{unitsListHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
